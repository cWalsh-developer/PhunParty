name: Dependency Updates

on:
    schedule:
        - cron: "0 0 * * 1" # Weekly on Monday at midnight UTC
    workflow_dispatch: # Allow manual triggering

jobs:
    update-python-deps:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"

            - name: Check if requirements.txt exists
              id: check-python
              run: |
                  if [ -f "phunparty-backend/requirements.txt" ]; then
                    echo "exists=true" >> $GITHUB_OUTPUT
                  else
                    echo "exists=false" >> $GITHUB_OUTPUT
                  fi

            - name: Install pip-tools and update Python dependencies
              if: steps.check-python.outputs.exists == 'true'
              run: |
                  python -m pip install --upgrade pip pip-tools
                  cd phunparty-backend

                  # Create requirements.in if it doesn't exist
                  if [ ! -f "requirements.in" ]; then
                    cp requirements.txt requirements.in
                  fi

                  # Update dependencies
                  pip-compile --upgrade requirements.in

            - name: Check for Python dependency changes
              if: steps.check-python.outputs.exists == 'true'
              id: python-changes
              run: |
                  if git diff --quiet phunparty-backend/requirements.txt; then
                    echo "changes=false" >> $GITHUB_OUTPUT
                  else
                    echo "changes=true" >> $GITHUB_OUTPUT
                  fi

            - name: Create Pull Request for Python dependencies
              if: steps.check-python.outputs.exists == 'true' && steps.python-changes.outputs.changes == 'true'
              uses: peter-evans/create-pull-request@v5
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  commit-message: "chore: update Python dependencies"
                  title: "chore: update Python dependencies"
                  body: |
                      This PR updates Python dependencies to their latest versions.

                      Please review the changes and ensure all tests pass before merging.

                      Auto-generated by GitHub Actions.
                  branch: "chore/update-python-deps"
                  delete-branch: true

    security-updates:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"

            - name: Check for Python security updates
              run: |
                  if [ -f "phunparty-backend/requirements.txt" ]; then
                    cd phunparty-backend
                    pip install safety
                    safety check -r requirements.txt --json --output safety-report.json || true
                    
                    # Check if there are any vulnerabilities
                    if [ -f "safety-report.json" ] && [ -s "safety-report.json" ]; then
                      echo "Security vulnerabilities found in Python dependencies"
                      cat safety-report.json
                    fi
                  fi

            - name: Create security update issue
              if: always()
              uses: actions/github-script@v6
              with:
                  script: |
                      const fs = require('fs');
                      let securityIssues = [];

                      // Check for Python security issues
                      try {
                        if (fs.existsSync('phunparty-backend/safety-report.json')) {
                          const safetyReport = JSON.parse(fs.readFileSync('phunparty-backend/safety-report.json', 'utf8'));
                          if (safetyReport.length > 0) {
                            securityIssues.push('Python dependencies have security vulnerabilities');
                          }
                        }
                      } catch (e) {
                        console.log('No Python security issues found');
                      }

                      if (securityIssues.length > 0) {
                        const issueBody = `## Security Update Required

                      The following security vulnerabilities were found in dependencies:

                      ${securityIssues.map(issue => `- ${issue}`).join('\n')}

                      Please review and update the affected dependencies.

                      This issue was automatically created by the dependency update workflow.`;

                        await github.rest.issues.create({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          title: 'Security vulnerabilities found in dependencies',
                          body: issueBody,
                          labels: ['security', 'dependencies']
                        });
                      }
